pip install openai
import openai

class GPT35TurboChatbot:
    def __init__(self, api_key, personality="Friendly Bot"):
        """
        Initialize the chatbot with OpenAI API key and personality
        
        Args:
            api_key (str): OpenAI API key
            personality (str, optional): Chatbot's personality. Defaults to "Friendly Bot".
        """
        openai.api_key = api_key
        self.personality = personality
        self.messages = [
            {"role": "system", "content": f"You are a {self.personality} chatbot. Be helpful and engaging."}
        ]

    def generate_response(self, user_input):
        """
        Generate a response using OpenAI's GPT-3.5 Turbo model
        
        Args:
            user_input (str): User's message
        
        Returns:
            str: AI-generated response
        """
        # Add user input to message history
        self.messages.append({"role": "user", "content": user_input})
        
        try:
            # Call OpenAI's Chat Completion API
            response = openai.ChatCompletion.create(
                model="gpt-3.5-turbo",
                messages=self.messages
            )
            
            # Extract the AI's response
            ai_response = response.choices[0].message['content']
            
            # Add AI response to message history
            self.messages.append({"role": "assistant", "content": ai_response})
            
            return ai_response
        
        except Exception as e:
            return f"An error occurred: {str(e)}"

def main():
    # Replace with your actual OpenAI API key
    API_KEY = "your_openai_api_key_here"
    
    # Create chatbot instance with a personality
    chatbot = GPT35TurboChatbot(API_KEY, personality="Professional Assistant")
    
    print("Welcome to the AI Chatbot! Type 'exit' to end the conversation.")
    
    while True:
        # Get user input
        user_input = input("You: ")
        
        # Check for exit condition
        if user_input.lower() == 'exit':
            print("Chatbot: Goodbye!")
            break
        
        # Generate and print response
        response = chatbot.generate_response(user_input)
        print(f"Chatbot: {response}")

if __name__ == "__main__":
    main()